# Generated by Django 4.2.21 on 2025-09-05 14:03

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subjects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numar', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)])),
                ('an_scolar', models.CharField(help_text='Ex: 2024-2025', max_length=10)),
                ('data_inceput', models.DateField()),
                ('data_sfarsit', models.DateField()),
                ('activ', models.BooleanField(default=False, help_text='Semestrul activ în prezent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Semestru',
                'verbose_name_plural': 'Semestre',
                'ordering': ['-an_scolar', '-numar'],
                'unique_together': {('user', 'numar', 'an_scolar')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.CharField(choices=[('nota', 'Notă'), ('absenta', 'Absență'), ('absenta_motivata', 'Absență motivată'), ('intarziere', 'Întârziere')], max_length=20)),
                ('valoare', models.DecimalField(blank=True, decimal_places=2, help_text='Valoarea notei (1.00 - 10.00). Nu se completează pentru absențe.', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(10.0)])),
                ('tip_evaluare', models.CharField(blank=True, choices=[('oral', 'Recitare/Oral'), ('test', 'Test/Lucrare scrisă'), ('teza', 'Teză'), ('proiect', 'Proiect'), ('tema', 'Temă pentru acasă'), ('activitate', 'Activitate în clasă'), ('comportament', 'Comportament'), ('altele', 'Altele')], help_text='Tipul de evaluare pentru note', max_length=20)),
                ('descriere', models.CharField(blank=True, help_text='Descrierea evaluării (ex: Capitolul 3, Ecuații de gradul 2)', max_length=200)),
                ('data', models.DateField(default=datetime.date.today, help_text='Data când s-a primit nota/absența')),
                ('semestru', models.PositiveIntegerField(help_text='Semestrul (1 sau 2)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)])),
                ('motivata', models.BooleanField(default=False, help_text='Pentru absențe - dacă este motivată')),
                ('data_motivare', models.DateField(blank=True, help_text='Când a fost motivată absența', null=True)),
                ('note_personale', models.TextField(blank=True, help_text='Note personale despre această evaluare')),
                ('importante', models.BooleanField(default=False, help_text='Notă importantă (teză, test important)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_set', to='subjects.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notă/Absență',
                'verbose_name_plural': 'Note/Absențe',
                'ordering': ['-data', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubjectGradeStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('numar_note', models.PositiveIntegerField(default=0)),
                ('numar_absente', models.PositiveIntegerField(default=0)),
                ('numar_absente_motivate', models.PositiveIntegerField(default=0)),
                ('numar_intarzieri', models.PositiveIntegerField(default=0)),
                ('nota_maxima', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('nota_minima', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('tendinta', models.CharField(choices=[('crescatoare', 'Crescătoare'), ('descrescatoare', 'Descrescătoare'), ('stabila', 'Stabilă'), ('neconcludenta', 'Neconcludentă')], default='neconcludenta', max_length=20)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grades.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subjects.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Statistici Note Materie',
                'verbose_name_plural': 'Statistici Note Materii',
                'unique_together': {('user', 'subject', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='GradeGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_dorita', models.DecimalField(decimal_places=2, help_text='Media dorită pentru această materie', max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(10.0)])),
                ('descriere', models.TextField(blank=True, help_text='De ce această medie este importantă')),
                ('atins', models.BooleanField(default=False)),
                ('data_atins', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_goals', to='grades.semester')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_goals', to='subjects.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Obiectiv Notă',
                'verbose_name_plural': 'Obiective Note',
                'unique_together': {('user', 'subject', 'semester')},
            },
        ),
    ]
